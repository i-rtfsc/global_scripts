#!/usr/bin/env python3
# -*- coding: utf-8 -*-
# -*- encoding: utf-8 -*-
#
# Copyright (c) 2023 anqi.huang@outlook.com
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.


import os

from string import Template

gitconfig_template = """[include]
    path =  ${path}/alias.git
    path =  ${path}/apply.git
    path =  ${path}/branch.git
    path =  ${path}/color.git
    path =  ${path}/core.git
    path =  ${path}/credentials.git
    path =  ${path}/diff.git
    path =  ${path}/push.git
    path =  ${path}/user.git
[includeIf "gitdir:~/work/"]
    path =  ${path}/work.git
[includeIf "gitdir:~/code/work/"]
    path =  ${path}/work.git
[includeIf "gitdir:~/code/sgm/"]
    path =  ${path}/work.git
"""


def file_exists(file):
    exists = os.path.isfile(file) and os.path.exists(file)
    return exists


def dir_exists(file):
    exists = os.path.isdir(file) and os.path.exists(file)
    return exists


def main():
    gs_config_path = os.getenv("_GS_CONFIG_PATH")
    if gs_config_path is None or dir_exists(gs_config_path) is False:
        gs_config_path = os.path.join(os.getenv("HOME"), "code/github/global_scripts/conf")
    else:
        print(gs_config_path)

    dest = os.path.join(os.getenv("HOME"), ".gitconfig")

    with open(dest, 'w') as f:
        gitconfig_text = Template(gitconfig_template).substitute({"path": os.path.join(gs_config_path, "gs_git")})
        print(gitconfig_text)
        f.write(gitconfig_text)

    return 1


if __name__ == '__main__':
    try:
        main()
    except KeyboardInterrupt:
        exit()
